<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="publication">

    <resultMap id="result" type="Publication">
        <id property="id" column="publication_id"/>
        <result property="indexId" column="index_id"/>
        <result property="displayToPublicDate" column="display_to_public_date"/>
        <result property="publicationYear" column="publication_year"/>
        <result property="noYear" column="no_year"/>
        <result property="seriesNumber" column="series_number"/>
        <result property="subseriesTitle" column="subseries_title"/>
        <result property="chapter" column="chapter"/>
        <result property="subchapterNumber" column="subchapter"/>
        <result property="displayTitle" column="display_title"/>
        <result property="title" column="title"/>
        <result property="docAbstract" column="abstract"/>
        <result property="largerWorkTitle" column="larger_work_title"/>
        <result property="conferenceTitle" column="conference_title"/>
        <result property="conferenceDate" column="conference_date"/>
        <result property="conferenceLocation" column="conference_location"/>
        <result property="language" column="language"/>
        <result property="publisher" column="publisher"/>
        <result property="publisherLocation" column="publisher_location"/>
        <result property="doi" column="doi_name"/>
        <result property="issn" column="issn"/>
        <result property="isbn" column="isbn"/>
        <result property="programNote" column="program_note"/>
        <result property="collaboration" column="collaboration"/>
        <result property="usgsCitation" column="usgs_citation"/>
        <result property="productDescription" column="product_description"/>
        <result property="startPage" column="start_page"/>
        <result property="endPage" column="end_page"/>
        <result property="numberOfPages" column="number_of_pages"/>
        <result property="onlineOnly" column="online_only"/>
        <result property="additionalOnlineFiles" column="additional_online_files"/>
        <result property="temporalStart" column="temporal_start"/>
        <result property="temporalEnd" column="temporal_end"/>
        <result property="notes" column="notes"/>
        <result property="ipdsId" column="ipds_id"/>
        <result property="updateDate" column="update_date"/>
        <result property="ipdsReviewProcessState" column="ipds_review_process_state"/>
        <result property="scale" column="scale"/>
        <result property="projection" column="projection"/>
        <result property="datum" column="datum"/>
        <result property="country" column="country"/>
        <result property="state" column="state"/>
        <result property="county" column="county"/>
        <result property="city" column="city"/>
        <result property="otherGeospatial" column="other_geospatial"/>
        <result property="geographicExtents" column="geographic_extents"/>
        <result property="volume" column="volume"/>
        <result property="issue" column="issue"/>
        <result property="edition" column="edition"/>
        <result property="comments" column="public_comments"/>
        <result property="contact" column="contact_info"/>
        <result property="tableOfContents" column="table_of_contents"/>
        <result property="publishedDate" column="published_date"/>
        <result property="revisedDate" column="revised_date"/>
        <result property="sourceDatabase" column="sourceDatabase"/>
        <result property="published" column="published"/>
        <result property="noUsgsAuthors" column="no_usgs_authors"/>
        <result property="insertDate" column="publication_insert_date"/>
        <result property="insertUsername" column="publication_insert_username"/>
        <result property="updateDate" column="publication_update_date"/>
        <result property="updateUsername" column="publication_update_username"/>
        <association property="publicationType">
            <id property="id" column="publication_type_id"/>
            <result property="text" column="publication_type_name"/>
        </association>
        <association property="publicationSubtype">
            <id property="id" column="publication_subtype_id"/>
            <result property="text" column="publication_subtype_name"/>
        </association>
        <association property="largerWorkType">
            <id property="id" column="larger_work_type_id"/>
            <result property="text" column="larger_work_type_name"/>
        </association>
        <association property="largerWorkSubtype">
            <id property="id" column="larger_work_subtype_id"/>
            <result property="text" column="larger_work_subtype_name"/>
        </association>
        <association property="seriesTitle">
            <id property="id" column="publication_series_id"/>
            <result property="publicationSubtype.id" column="publication_series_publication_subtype_id"/>
            <result property="text" column="publication_series_name"/>
            <result property="code" column="publication_series_code"/>
            <result property="seriesDoiName" column="publication_series_doi_name"/>
            <result property="printIssn" column="publication_series_print_issn"/>
            <result property="onlineIssn" column="publication_series_online_issn"/>
            <result property="active" column="publication_series_is_active"/>
        </association>
        <association property="publishingServiceCenter">
            <id property="id" column="publishing_service_center_id"/>
            <result property="text" column="publishing_service_center_name"/>
        </association>
    </resultMap>

    <resultMap id="genericResult" type="Publication" extends="result">
        <discriminator javaType="String" column="sourceDatabase">
            <case value="mypubs" resultMap="mpResult"/>
            <case value="pubs warehouse" resultMap="pwResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="mpResult" type="Publication" extends="genericResult">
        <association property="isPartOf" column="is_part_of_id" select="publication.getLookupById"/>
        <association property="supersededBy" column="superseded_by_id" select="publication.getLookupById"/>
        <collection property="costCenters" column="publication_id" select="mpPublicationCostCenter.getByPublication"/>
        <collection property="contributors" column="publication_id" select="mpPublicationContributor.getByPublication"/>
        <collection property="links" column="publication_id" select="mpPublicationLink.getByPublication"/>
        <collection property="interactions" column="publication_id" select="publicationInteraction.getByMpPublication"/>
    </resultMap>

    <resultMap id="pwResult" type="Publication" extends="genericResult">
        <association property="isPartOf" column="is_part_of_id" select="pwPublication.getLookupById"/>
        <association property="supersededBy" column="superseded_by_id" select="pwPublication.getLookupById"/>
        <collection property="costCenters" column="publication_id" select="pwPublicationCostCenter.getByPublication"/>
        <collection property="contributors" column="publication_id" select="pwPublicationContributor.getByPublication"/>
        <collection property="links" column="publication_id" select="pwPublicationLink.getByPublication"/>
        <collection property="interactions" column="publication_id" select="publicationInteraction.getByPwPublication"/>
    </resultMap>

    <resultMap id="lookupResult" type="Publication">
        <id property="id" column="publication_id"/>
        <result property="indexId" column="index_id"/>
        <result property="publicationYear" column="publication_year"/>
        <result property="title" column="title"/>
    </resultMap>

    <sql id="rawCols">
        publication_id,
        index_id,
        display_to_public_date,
        publication_year,
        no_year,
        publication_type_id,
        publication_subtype_id,
        publication_series_id,
        series_number,
        subseries_title,
        chapter,
        subchapter,
        display_title,
        title,
        larger_work_type_id,
        larger_work_title,
        larger_work_subtype_id,
        conference_title,
        conference_date,
        conference_location,
        language,
        publisher,
        publisher_location,
        doi_name,
        issn,
        isbn,
        collaboration,
        program_note,
        usgs_citation,
        product_description,
        start_page,
        end_page,
        number_of_pages,
        online_only,
        additional_online_files,
        temporal_start,
        temporal_end,
        ipds_id,
        ipds_review_process_state,
        scale,
        projection,
        datum,
        country,
        state,
        county,
        city,
        other_geospatial,
        volume,
        issue,
        edition,
        public_comments,
        contact_info,
        table_of_contents,
        publishing_service_center_id,
        published_date,
        is_part_of_id,
        superseded_by_id,
        revised_date,
        abstract,
        notes,
        geographic_extents,
        geom,
        no_usgs_authors,
        <include refid="base.auditCols"/>
    </sql>

    <sql id="cols">
        publication.publication_id,
        publication.index_id,
        publication.display_to_public_date,
        publication.publication_year,
        publication.no_year,
        publication.publication_type_id,
        publication_type.name publication_type_name,
        publication.publication_subtype_id,
        publication_subtype.name publication_subtype_name,
        publication.publication_series_id,
        publication_series.publication_subtype_id publication_series_publication_subtype_id,
        publication_series.name publication_series_name,
        publication_series.code publication_series_code,
        publication_series.doi_name publication_series_doi_name,
        publication_series.print_issn publication_series_print_issn,
        publication_series.online_issn publication_series_online_issn,
        publication_series.is_active publication_series_is_active,
        publication.series_number,
        publication.subseries_title,
        publication.chapter,
        publication.subchapter,
        publication.display_title,
        publication.title,
        publication.larger_work_type_id,
        larger_work_type.name larger_work_type_name,
        publication.larger_work_title,
        publication.larger_work_subtype_id,
        larger_work_subtype.name larger_work_subtype_name,
        publication.conference_title,
        publication.conference_date,
        publication.conference_location,
        publication.language,
        publication.publisher,
        publication.publisher_location,
        publication.doi_name,
        publication.issn,
        publication.isbn,
        publication.collaboration,
        publication.program_note,
        publication.usgs_citation,
        publication.product_description,
        publication.start_page,
        publication.end_page,
        publication.number_of_pages,
        publication.online_only,
        publication.additional_online_files,
        publication.temporal_start,
        publication.temporal_end,
        publication.ipds_id,
        publication.ipds_review_process_state,
        publication.scale,
        publication.projection,
        publication.datum,
        publication.country,
        publication.state,
        publication.county,
        publication.city,
        publication.other_geospatial,
        publication.volume,
        publication.issue,
        publication.edition,
        publication.public_comments,
        publication.contact_info,
        publication.table_of_contents,
        publication.publishing_service_center_id,
        publishing_service_center.name publishing_service_center_name,
        publication.published_date,
        publication.is_part_of_id,
        publication.superseded_by_id,
        publication.revised_date,
        publication.abstract,
        publication.notes,
        publication.geographic_extents,
        publication.geom,
        publication.no_usgs_authors,
        publication.insert_date publication_insert_date,
        publication.insert_username publication_insert_username,
        publication.update_date publication_update_date,
        publication.update_username publication_update_username
    </sql>

    <sql id="hosts">
        #{id,jdbcType=NUMERIC},
        coalesce(#{indexId,jdbcType=VARCHAR}::VARCHAR,#{id,jdbcType=VARCHAR}::VARCHAR),
        #{displayToPublicDate,jdbcType=DATE},
        #{publicationYear,jdbcType=VARCHAR},
        #{noYear,jdbcType=VARCHAR},
        #{publicationType.id,jdbcType=NUMERIC},
        #{publicationSubtype.id,jdbcType=NUMERIC},
        #{seriesTitle.id,jdbcType=NUMERIC},
        #{seriesNumber,jdbcType=VARCHAR},
        #{subseriesTitle,jdbcType=VARCHAR},
        #{chapter,jdbcType=VARCHAR},
        #{subchapterNumber,jdbcType=VARCHAR},
        #{displayTitle,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{largerWorkType.id,jdbcType=NUMERIC},
        #{largerWorkTitle,jdbcType=VARCHAR},
        #{largerWorkSubtype.id,jdbcType=NUMERIC},
        #{conferenceTitle,jdbcType=VARCHAR},
        #{conferenceDate,jdbcType=VARCHAR},
        #{conferenceLocation,jdbcType=VARCHAR},
        #{language,jdbcType=VARCHAR},
        #{publisher,jdbcType=VARCHAR},
        #{publisherLocation,jdbcType=VARCHAR},
        #{doi,jdbcType=VARCHAR},
        #{issn,jdbcType=VARCHAR},
        #{isbn,jdbcType=VARCHAR},
        #{collaboration,jdbcType=VARCHAR},
        #{programNote,jdbcType=VARCHAR},
        #{usgsCitation,jdbcType=VARCHAR},
        #{productDescription,jdbcType=VARCHAR},
        #{startPage,jdbcType=NUMERIC},
        #{endPage,jdbcType=NUMERIC},
        #{numberOfPages,jdbcType=NUMERIC}::int,
        #{onlineOnly,jdbcType=VARCHAR},
        #{additionalOnlineFiles,jdbcType=VARCHAR},
        #{temporalStart,jdbcType=DATE},
        #{temporalEnd,jdbcType=DATE},
        #{ipdsId,jdbcType=VARCHAR},
        #{ipdsReviewProcessState,jdbcType=VARCHAR},
        #{scale,jdbcType=NUMERIC}::int,
        #{projection,jdbcType=VARCHAR},
        #{datum,jdbcType=VARCHAR},
        #{country,jdbcType=VARCHAR},
        #{state,jdbcType=VARCHAR},
        #{county,jdbcType=VARCHAR},
        #{city,jdbcType=VARCHAR},
        #{otherGeospatial,jdbcType=VARCHAR},
        #{volume,jdbcType=VARCHAR},
        #{issue,jdbcType=VARCHAR},
        #{edition,jdbcType=VARCHAR},
        #{comments,jdbcType=VARCHAR},
        #{contact,jdbcType=VARCHAR},
        #{tableOfContents,jdbcType=VARCHAR},
        #{publishingServiceCenter.id,jdbcType=NUMERIC},
        #{publishedDate,jdbcType=DATE},
        #{isPartOf.id,jdbcType=NUMERIC},
        #{supersededBy.id,jdbcType=NUMERIC},
        #{revisedDate,jdbcType=DATE},
        #{docAbstract,jdbcType=CLOB},
        #{notes,jdbcType=VARCHAR},
        #{geographicExtents,jdbcType=VARCHAR}::JSON,
        st_geomfromgeojson(#{geographicExtents,jdbcType=VARCHAR}::json#>'{features,0}'->>'geometry'),
        #{noUsgsAuthors,jdbcType=BOOLEAN},
        <include refid="base.auditHosts"/>
    </sql>

    <sql id="sets">
        index_id = coalesce(#{indexId,jdbcType=VARCHAR}::VARCHAR,#{id,jdbcType=VARCHAR}::VARCHAR),
        display_to_public_date = #{displayToPublicDate,jdbcType=DATE},
        publication_year = #{publicationYear,jdbcType=VARCHAR},
        no_year = #{noYear,jdbcType=VARCHAR},
        publication_type_id = #{publicationType.id,jdbcType=NUMERIC},
        publication_subtype_id = #{publicationSubtype.id,jdbcType=NUMERIC},
        publication_series_id = #{seriesTitle.id,jdbcType=NUMERIC},
        series_number = #{seriesNumber,jdbcType=VARCHAR},
        subseries_title = #{subseriesTitle,jdbcType=VARCHAR},
        chapter = #{chapter,jdbcType=VARCHAR},
        subchapter = #{subchapterNumber,jdbcType=VARCHAR},
        display_title = #{displayTitle,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        larger_work_type_id = #{largerWorkType.id,jdbcType=NUMERIC},
        larger_work_title = #{largerWorkTitle,jdbcType=VARCHAR},
        larger_work_subtype_id = #{largerWorkSubtype.id,jdbcType=NUMERIC},
        conference_title = #{conferenceTitle,jdbcType=VARCHAR},
        conference_date = #{conferenceDate,jdbcType=VARCHAR},
        conference_location = #{conferenceLocation,jdbcType=VARCHAR},
        language = #{language,jdbcType=VARCHAR},
        publisher = #{publisher,jdbcType=VARCHAR},
        publisher_location = #{publisherLocation,jdbcType=VARCHAR},
        doi_name = #{doi,jdbcType=VARCHAR},
        issn = #{issn,jdbcType=VARCHAR},
        isbn = #{isbn,jdbcType=VARCHAR},
        collaboration = #{collaboration,jdbcType=VARCHAR},
        program_note = #{programNote,jdbcType=VARCHAR},
        usgs_citation = #{usgsCitation,jdbcType=VARCHAR},
        product_description = #{productDescription,jdbcType=VARCHAR},
        start_page = #{startPage,jdbcType=NUMERIC},
        end_page = #{endPage,jdbcType=NUMERIC},
        number_of_pages = #{numberOfPages,jdbcType=NUMERIC}::int,
        online_only = #{onlineOnly,jdbcType=VARCHAR},
        additional_online_files = #{additionalOnlineFiles,jdbcType=VARCHAR},
        temporal_start = #{temporalStart,jdbcType=DATE},
        temporal_end = #{temporalEnd,jdbcType=DATE},
        ipds_id = #{ipdsId,jdbcType=VARCHAR},
        ipds_review_process_state = #{ipdsReviewProcessState,jdbcType=VARCHAR},
        scale = #{scale,jdbcType=NUMERIC}::int,
        projection = #{projection,jdbcType=VARCHAR},
        datum = #{datum,jdbcType=VARCHAR},
        country = #{country,jdbcType=VARCHAR},
        state = #{state,jdbcType=VARCHAR},
        county = #{county,jdbcType=VARCHAR},
        city = #{city,jdbcType=VARCHAR},
        other_geospatial = #{otherGeospatial,jdbcType=VARCHAR},
        volume = #{volume,jdbcType=VARCHAR},
        issue = #{issue,jdbcType=VARCHAR},
        edition = #{edition,jdbcType=VARCHAR},
        public_comments = #{comments,jdbcType=VARCHAR},
        contact_info = #{contact,jdbcType=VARCHAR},
        table_of_contents = #{tableOfContents,jdbcType=VARCHAR},
        publishing_service_center_id = #{publishingServiceCenter.id,jdbcType=NUMERIC},
        published_date = #{publishedDate,jdbcType=DATE},
        is_part_of_id = #{isPartOf.id,jdbcType=NUMERIC},
        superseded_by_id = #{supersededBy.id,jdbcType=NUMERIC},
        revised_date = #{revisedDate,jdbcType=DATE},
        abstract = #{docAbstract,jdbcType=CLOB},
        notes = #{notes,jdbcType=VARCHAR},
        geographic_extents = #{geographicExtents,jdbcType=VARCHAR}::JSON,
        geom = st_geomfromgeojson(#{geographicExtents,jdbcType=VARCHAR}::json#>'{features,0}'->>'geometry'),
        no_usgs_authors = #{noUsgsAuthors,jdbcType=BOOLEAN},
        <include refid="base.auditSets"/>
    </sql>

    <sql id="associationJoins">
        left join publication_type
          on publication.publication_type_id = publication_type.publication_type_id
        left join publication_subtype
          on publication.publication_subtype_id = publication_subtype.publication_subtype_id
        left join publication_type larger_work_type
          on publication.larger_work_type_id = larger_work_type.publication_type_id
        left join publication_subtype larger_work_subtype
          on publication.larger_work_subtype_id = larger_work_subtype.publication_subtype_id
        left join publication_series
          on publication.publication_series_id = publication_series.publication_series_id
        left join publishing_service_center
          on publication.publishing_service_center_id = publishing_service_center.publishing_service_center_id
    </sql>

    <sql id="likeTerm">
        like '%' || upper(#{term}) || '%'
    </sql>

    <sql id="singleSearchTermFilter">
                   upper(publication.title) <include refid="publication.likeTerm"/>
                or upper(publication.abstract) <include refid="publication.likeTerm"/>
                or upper(publication.subseries_title) <include refid="publication.likeTerm"/>
                or upper(publication.series_number) <include refid="publication.likeTerm"/>
                or upper(publication.index_id) <include refid="publication.likeTerm"/>
                or to_char(publication.publication_id, '9999999999') = #{term}
                or upper(publication.ipds_id) <include refid="publication.likeTerm"/>
                or upper(publication.publication_year) <include refid="publication.likeTerm"/>

                <!-- publication type name -->
                or publication.publication_type_id in (select publication_type_id
                                                 from publication_type
                                                where upper(name) <include refid="publication.likeTerm"/>)

                <!-- publication subtype name -->
                or publication.publication_subtype_id in (select publication_subtype_id
                                                    from publication_subtype
                                                   where upper(name) <include refid="publication.likeTerm"/>)

                <!-- series name -->
                or publication.publication_series_id in (select publication_series_id
                                                   from publication_series
                                                  where upper(name) <include refid="publication.likeTerm"/>)
    </sql>

    <sql id="filters">
            <if test="title != null and title.length > 0">
                and <foreach item="t" collection="title" open="(" separator="or" close=")">
                    upper(publication.title) like '%' || upper(#{t}) || '%'
                </foreach>
            </if>

            <if test="abstract != null and abstract.length > 0">
                and <foreach item="a" collection="abstract" open="(" separator="or" close=")">
                    upper(publication.abstract) like '%' || upper(#{a}) || '%'
                </foreach>
            </if>

            <if test="prodId != null and prodId.length > 0">
                and <foreach item="i" collection="prodId" open="(" separator="or" close=")">
                    publication.publication_id = #{i,jdbcType=NUMERIC}::numeric
                </foreach>
            </if>

            <if test="indexId != null and indexId.length > 0">
                and <foreach item="i" collection="indexId" open="(" separator="or" close=")">
                    upper(publication.index_id) = upper(#{i,jdbcType=VARCHAR})
                </foreach>
            </if>

            <if test="ipdsId != null and ipdsId.length > 0">
                and <foreach item="i" collection="ipdsId" open="(" separator="or" close=")">
                    publication.ipds_id = #{i,jdbcType=VARCHAR}
                </foreach>
            </if>

            <if test="year != null and year.length > 0">
                and <foreach item="y" collection="year" open="(" separator="or" close=")">
                    publication.publication_year = #{y}
                </foreach>
            </if>

            <if test="startYear != null">
                and publication.publication_year &gt;= #{startYear}
            </if>

            <if test="endYear != null">
                and publication.publication_year &lt;= #{endYear}
            </if>

            <if test="typeName != null and typeName.length > 0">
                and publication.publication_type_id in (select publication_type_id
                                                  from publication_type
                                                 where
                    <foreach item="r" collection="typeName" open="(" separator="or" close=")">
                        upper(name) like '%' || upper(#{r}) || '%'
                    </foreach>
                    )
            </if>

            <if test="subtypeName != null and subtypeName.length > 0">
                and publication.publication_subtype_id in (select publication_subtype_id
                                                     from publication_subtype
                                                    where
                    <foreach item="r" collection="subtypeName" open="(" separator="or" close=")">
                        upper(name) like '%' || upper(#{r}) || '%'
                    </foreach>
                    )
            </if>

            <if test="seriesName != null and seriesName.length > 0">
                and publication.publication_series_id in (select publication_series_id
                                                    from publication_series
                                                   where
                    <foreach item="r" collection="seriesName" open="(" separator="or" close=")">
                        upper(name) like '%' || upper(#{r}) || '%'
                    </foreach>
                    )
            </if>

            <if test="reportNumber != null and reportNumber.length > 0">
                and <foreach item="r" collection="reportNumber" open="(" separator="or" close=")">
                        upper(publication.series_number) like '%' || upper(#{r}) || '%'
                    </foreach>
            </if>

            <if test="doi != null and doi.length > 0">
                and <foreach item="d" collection="doi" open="(" separator="or" close=")">
                    upper(publication.doi_name) like '%' || upper(#{d}) || '%'
                </foreach>
            </if>

            <if test="null != hasDoi">
            <choose>
                <when test="hasDoi">
                    and publication.doi_name is not null
                </when>
                <otherwise>
                    and publication.doi_name is null
                </otherwise>
            </choose>
        </if>
    </sql>

    <sql id="orderBy">
        order by
        <choose>
            <when test="orderBy == 'title'">
                publication.title asc,
            </when>
            <when test="orderBy == 'mpNewest'">
                case when publication_insert_date = publication_update_date then 1 else 2 end,
                publication_update_date desc,
            </when>
        </choose>
        replace(publication.publication_year, 'noyr', '0000') desc nulls last,
        publication.no_year,
        publication.display_to_public_date desc,
        publication.publication_id desc
    </sql>

    <sql id="globalSelect">
        select <include refid="cols"/>, 'mypubs' sourceDatabase, published
          from mp_publication publication
               <include refid="publication.associationJoins"/>
               <include refid="mpPublication.filters"/>
        <if test="global != null and global == 'true'">
            union all
            select <include refid="cols"/>, 'pubs warehouse' sourceDatabase, 'Y' published
              from publication publication
                   <include refid="publication.associationJoins"/>
             where publication_id in (select publication_id from publication
                                      except
                                      select publication_id from mp_publication)
                   <include refid="pwPublication.filters"/>
        </if>
    </sql>

    <select id="getById" parameterType="Integer" resultMap="genericResult">
        select <include refid="cols"/>, 'mypubs' sourceDatabase, published
          from mp_publication publication
               <include refid="publication.associationJoins"/>
         where publication_id = #{value,jdbcType=INTEGER}::int
        union all
        select <include refid="cols"/>, 'pubs warehouse' sourceDatabase, 'Y' published
          from publication
               <include refid="publication.associationJoins"/>
         where publication_id in (select publication_id from publication
                                  except
                                  select publication_id from mp_publication) and
               publication_id = #{value,jdbcType=INTEGER}::int
    </select>

    <select id="validateByMap" parameterType="map" resultType="map">
        select publication_id, index_id, ipds_id, 'mypubs' sourceDatabase, published
          from mp_publication publication
               <include refid="mpPublication.filters"/>
        union all
        select publication_id, index_id, ipds_id, 'pubs warehouse' sourceDatabase, 'Y' published
          from publication publication
         where publication_id in (select publication_id from publication
                                  except
                                  select publication_id from mp_publication)
               <include refid="pwPublication.filters"/>
    </select>

    <select id="getCountBySeries" parameterType="Integer" resultType="Integer">
        select count(*)
          from (select publication_id
                  from mp_publication publication
                 where publication.publication_series_id = #{value,jdbcType=INTEGER}::int
                union all
                select publication_id
                  from publication publication
                 where publication_id in (select publication_id from publication
                                          except
                                          select publication_id from mp_publication) and
                       publication.publication_series_id = #{value,jdbcType=INTEGER}::int
               ) pubs
    </select>

    <select id="getByMap" parameterType="map" resultMap="genericResult">
        select *
          from (<include refid="globalSelect"/>) publication
        <include refid="orderBy"/>
        <include refid="base.pagingRowLimit"/>
    </select>

    <select id="getCount" parameterType="map" resultType="Integer">
        select count(*)
          from (<include refid="globalSelect"/>) publication
    </select>

    <sql id="baseLookupSelect">
        select publication_id,
               index_id,
               publication_year,
               no_year,
               title
    </sql>

    <select id="getLookupById" parameterType="Integer" resultMap="lookupResult">
        <include refid="baseLookupSelect"/>
            from all_publication_lookup
           where publication_id = #{value,jdbcType=INTEGER}::int
    </select>

    <select id="filterLookupByIndexId" parameterType="String" resultMap="lookupResult">
        <include refid="baseLookupSelect"/>
            from all_publication_lookup
        <if test="value != null">
           where upper(index_id) like upper(#{value,jdbcType=VARCHAR}) || '%'
        </if>
    </select>

</mapper>
