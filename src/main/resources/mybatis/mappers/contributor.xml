<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="contributor">

    <resultMap id="result" type="Contributor">
        <id property="id" column="contributor_id"/>
        <result property="corporation" column="is_corporation"/>
        <result property="usgs" column="is_usgs"/>
        <result property="insertDate" column="contributor_insert_date"/>
        <result property="insertUsername" column="contributor_insert_username"/>
        <result property="updateDate" column="contributor_update_date"/>
        <result property="updateUsername" column="contributor_update_username"/>
        <discriminator javaType="boolean" column="is_corporation">
            <case value="true" resultMap="corporateResult"/>
            <case value="false" resultMap="personResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="corporateResult" type="CorporateContributor" extends="contributor.result">
        <result property="organization" column="literal"/>
    </resultMap>

    <resultMap id="personResult" type="PersonContributor" extends="contributor.result">
        <result property="family" column="family"/>
        <result property="given" column="given"/>
        <result property="suffix" column="suffix"/>
        <result property="email" column="email"/>
        <result property="orcid" column="orcid"/>
        <result property="preferred" column="is_preferred"/>
        <collection property="affiliations" resultMap="affiliation.result"/>
        <discriminator javaType="boolean" column="is_usgs">
            <case value="true" resultMap="usgsResult"/>
            <case value="false" resultMap="outsideResult"/>
        </discriminator>
    </resultMap>

    <resultMap id="usgsResult" type="UsgsContributor" extends="contributor.personResult" />

    <resultMap id="outsideResult" type="OutsideContributor" extends="contributor.personResult" />

    <sql id="rawBaseCols">
        contributor_id,
        is_corporation,
        is_usgs,
        <include refid="base.auditCols"/>
    </sql>

    <sql id="baseCols">
        contributor.contributor_id, 
        contributor.is_corporation,
        contributor.is_usgs,
        contributor.insert_date contributor_insert_date,
        contributor.insert_username contributor_insert_username,
        contributor.update_date contributor_update_date,
        contributor.update_username contributor_update_username
    </sql>

    <sql id="associationCols">
        affiliation.affiliation_id,
        affiliation.name,
        affiliation.is_cost_center,
        affiliation.is_active
    </sql>

    <sql id="rawCorpCols">
        literal
    </sql>

    <sql id="corpCols">
        contributor.literal
    </sql>

    <sql id="rawPersonCols">
        family,
        given,
        suffix,
        email,
        orcid,
        is_preferred
    </sql>

    <sql id="personCols">
        contributor.family,
        contributor.given,
        contributor.suffix,
        contributor.email,
        contributor.orcid,
        contributor.is_preferred
    </sql>

    <sql id="baseHosts">
        #{id,jdbcType=NUMERIC},
        #{corporation,jdbcType=BOOLEAN},
        #{usgs,jdbcType=BOOLEAN},
        <include refid="base.auditHosts"/>
    </sql>

     <sql id="corpHosts">
        <include refid="baseHosts"/>,
        #{organization,jdbcType=VARCHAR}
    </sql>

     <sql id="personHosts">
        <include refid="baseHosts"/>,
        #{family,jdbcType=VARCHAR},
        #{given,jdbcType=VARCHAR},
        #{suffix,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{orcid,jdbcType=VARCHAR},
        #{preferred,jdbcType=BOOLEAN}
    </sql>

    <sql id="baseSets">
        is_corporation = #{corporation,jdbcType=BOOLEAN},
        is_usgs = #{usgs,jdbcType=BOOLEAN},
        <include refid="base.auditSets"/>
    </sql>

    <sql id="corpSets">
        <include refid="baseSets"/>,
        literal = #{organization,jdbcType=VARCHAR}
    </sql>

    <sql id="personSets">
        <include refid="baseSets"/>,
        family = #{family,jdbcType=VARCHAR},
        given = #{given,jdbcType=VARCHAR},
        suffix = #{suffix,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        orcid = #{orcid,jdbcType=VARCHAR},
        is_preferred = #{preferred,jdbcType=BOOLEAN}
    </sql>

    <sql id="associationJoins">
        left join contributor_affiliation
          on contributor.contributor_id = contributor_affiliation.contributor_id
        left join affiliation
          on contributor_affiliation.affiliation_id = affiliation.affiliation_id
    </sql>

    <sql id="filters">
        <if test="id != null">
            and contributor.contributor_id = #{id}
        </if>
        <if test="preferred != null">
            and contributor.is_preferred = #{preferred}
        </if>
        <if test="text != null">
            and to_tsvector('english', contributor.text) @@ to_tsquery('english', #{text})
        </if>
        <if test="given != null and given.length > 0">
            <foreach item="given" collection="given" open="and (" separator="or" close=")">
               upper(contributor.given) like upper(#{given}) || '%'
            </foreach>
        </if>
        <if test="family != null and family.length > 0">
            <foreach item="family" collection="family" open="and (" separator="or" close=")">
               upper(contributor.family) like upper(#{family}) || '%'
            </foreach>
        </if>
        <if test="corporation != null">
            and contributor.is_corporation = #{corporation}
        </if>
        <if test="usgs != null">
            and contributor.is_usgs = #{usgs}
        </if>
        <if test="email != null and email.length > 0">
            <foreach item="email" collection="email" open="and (" separator="or" close=")">
               upper(contributor.email) like upper(#{email}) || '%'
            </foreach>
        </if>
        <if test="orcid != null and orcid.length > 0">
            <foreach item="oid" collection="orcid" open="and (" separator="or" close=")">
                contributor.orcid = #{oid}
            </foreach>
        </if>
    </sql>

    <sql id="baseSelect">
        select <include refid="baseCols"/>,
               <include refid="personCols"/>,
               <include refid="corpCols"/>,
               <include refid="associationCols"/>
          from contributor
               <include refid="contributor.associationJoins"/>
    </sql>

    <sql id="defaultOrderBy">
        order by upper(text)
    </sql>

    <select id="getCount" resultType="Integer">
        select count(*)
          from contributor
        <where>
            <include refid="filters"/>
        </where>
    </select>

    <select id="getById" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor.contributor_id = #{value,jdbcType=NUMERIC}
    </select>

    <select id="getByIdPersonContributor" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor.contributor_id = #{value,jdbcType=NUMERIC} and
               not contributor.is_corporation
    </select>

    <select id="getByIdCorporateContributor" parameterType="Integer" resultMap="result">
        <include refid="baseSelect"/>
         where contributor.contributor_id = #{value,jdbcType=NUMERIC} and
               contributor.is_corporation
    </select>

    <select id="getByMap" resultMap="result">
        <include refid="baseSelect"/>
        <where>
            <include refid="filters"/>
        </where>
        <include refid="defaultOrderBy"/>
    </select>

    <select id="getByMapPersonContributor" resultMap="result">
        <include refid="baseSelect"/>
        where not contributor.is_corporation
        <include refid="filters"/>
        <include refid="defaultOrderBy"/>
    </select>

    <select id="getByMapCorporateContributor" resultMap="result">
        <include refid="baseSelect"/>
        where contributor.is_corporation
        <include refid="filters"/>
        <include refid="defaultOrderBy"/>
    </select>

    <select id="getByPreferred" resultMap="result">
        <include refid="baseSelect"/>
        <where>
            <if test="corporation != null">
                and contributor.is_corporation = #{corporation,jdbcType=BOOLEAN}
            </if>
            <if test="usgs != null">
                and contributor.is_usgs = #{usgs,jdbcType=BOOLEAN}
            </if>
            <if test="orcid != null">
                and contributor.orcid = #{orcid,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                and contributor.email = #{email,jdbcType=VARCHAR}
            </if>
        </where>
        order by is_preferred desc,
                 upper(contributor.text)
    </select>

    <insert id="addPersonContributor" parameterType="PersonContributor">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select nextval('contributor_seq')
        </selectKey>
        insert into contributor (<include refid="rawBaseCols"/>,
                                 <include refid="rawPersonCols"/>,
                                 text)
             values (<include refid="personHosts"/>,
                     #{text,jdbcType=VARCHAR})
    </insert>

    <insert id="addCorporateContributor" parameterType="CorporateContributor">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select nextval('contributor_seq')
        </selectKey>
        insert into contributor (<include refid="rawBaseCols"/>,
                                 <include refid="rawCorpCols"/>,
                                 text)
             values (<include refid="corpHosts"/>,
                     #{text,jdbcType=VARCHAR})
    </insert>

    <update id="updatePersonContributor" parameterType="PersonContributor">
        update contributor
           set <include refid="personSets"/>,
               text = #{text,jdbcType=VARCHAR}
           where contributor_id = #{id,jdbcType=NUMERIC}
    </update>

    <update id="updateCorporateContributor" parameterType="CorporateContributor">
        update contributor
           set <include refid="corpSets"/>,
               text = #{text,jdbcType=VARCHAR}
           where contributor_id = #{id,jdbcType=NUMERIC}
    </update>

    <delete id="delete">
        delete from contributor <include refid="base.deleteAuditHack"/>
         where contributor_id = #{id,jdbcType=NUMERIC}
    </delete>

    <insert id="addAffiliation" parameterType="map">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            select nextval('contributor_affiliation_seq')
        </selectKey>
        insert into contributor_affiliation (<include refid="base.auditCols"/>,
                                             contributor_affiliation_id,
                                             contributor_id,
                                             affiliation_id)
            values (<include refid="base.auditHosts"/>,#{id,jdbcType=NUMERIC},#{contributorId,jdbcType=NUMERIC}, #{affiliationId,jdbcType=NUMERIC})
    </insert>

    <delete id="removeAffiliations">
        delete from contributor_affiliation <include refid="base.deleteAuditHack"/>
         where contributor_id = #{id,jdbcType=NUMERIC}
    </delete>
</mapper>
